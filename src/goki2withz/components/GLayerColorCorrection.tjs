/*
 * $Revision: 260 $
**/


/**/
class GLayerColorCorrection
{
	var owner_ = void;

	var grayScale = false;
	var rGamma = 1.0, gGamma = 1.0, bGamma = 1.0;
	var rFloor = 0, gFloor = 0, bFloor = 0;
	var rCeil = 255, gCeil = 255, bCeil = 255;
	var color = clNone;
	var opacity = 255;
	var mode = 'omPsNormal';

	function GLayerColorCorrection(owner)
	{
		owner_ = owner;
	}

	/**/
	function apply(target = owner_)
	{
		var oldFace = target.face;
		var oldHoldAlpha = target.holdAlpha;

		target.face = dfAuto;
		target.holdAlpha = true;

		var iw = target.imageWidth;
		var ih = target.imageHeight;

		target.doGrayScale() if grayScale;
		target.adjustGamma(rGamma, rFloor, rCeil, gGamma, gFloor, gCeil, bGamma, bFloor, gCeil);

		if(color !== clNone)
		{
			if(mode === void || mode == 'omPsNormal')
			{
				target.face = dfOpaque;
				target.colorRect(0, 0, iw, ih, color, opacity);
			}
			else
			{
				var w = 128, h = 64;
				var c = color, o = opacity;
				var m = target.stringTo(mode);
				var l = window.temporaryLayer;

				l.setSize(w, h);
				l.fillRect(0, 0, w, h, (o << 24) + c);

				for(var y = 0; y < ih; y += h)
				{
					for(var x = 0; x < iw; x += w)
						target.operateRect(x, y, l, 0, 0, w, h, m);
				}
			}
		}

		target.face = oldFace;
		target.holdAlpha = oldHoldAlpha;
	}

	/**/
	function clear()
	{
		grayScale = false;
		rGamma = 1.0;
		gGamma = 1.0;
		bGamma = 1.0;
		rFloor = 0;
		gFloor = 0;
		bFloor = 0;
		rCeil = 255;
		gCeil = 255;
		bCeil = 255;
		color = clNone;
		opacity = 255;
		mode = 'omPsNormal';
	}

	/**/
	function assign(src)
	{
		grayScale = src.grayScale;
		rGamma = src.rGamma;
		gGamma = src.gGamma;
		bGamma = src.bGamma;
		rFloor = src.rFloor;
		gFloor = src.gFloor;
		bFloor = src.bFloor;
		rCeil = src.rCeil;
		gCeil = src.gCeil;
		bCeil = src.bCeil;
		color = src.color;
		opacity = src.opacity;
		mode = src.mode;
	}

	/**/
	function store(tick)
	{
		return %[
			grayScale : grayScale,
			rGamma : rGamma, gGamma : gGamma, bGamma : bGamma,
			rFloor : rFloor, gFloor : gFloor, bFloor : bFloor,
			rCeil : rCeil, gCeil : gCeil, bCeil : bCeil,
			color : color, opacity : opacity, mode : mode
		];
	}

	/**/
	function restore(dic, tick)
	{
		grayScale = dic.grayScale;
		rGamma = dic.rGamma;
		gGamma = dic.gGamma;
		bGamma = dic.bGamma;
		rFloor = dic.rFloor;
		gFloor = dic.gFloor;
		bFloor = dic.bFloor;
		rCeil = dic.rCeil;
		gCeil = dic.gCeil;
		bCeil = dic.bCeil;
		color = dic.color;
		opacity = dic.opacity;
		mode = dic.mode;
	}

	/**/
	property owner
	{
		getter		{ return owner_; }
	}
}


