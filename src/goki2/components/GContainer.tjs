/*
 * $Revision: 119 $
**/


/*! \brief コンテナ基本クラス
**/
class GContainer
{
	var window_;

	var objects_ = %[];

	function GContainer(window_)
	{
		this.window_ = window_;

		Scripts.setCallMissing(this);
	}

	function finalize()
	{
	}

	/**/
	function missing(get_or_set, name, value)
	{
		if(get_or_set != 1)
		{
			if(typeof(objects_[name]) !== 'undefined')
			{
				*value = objects_[name];

				return true;
			}
		}

		return false;
	}

	/**/
	function add(name, obj)
	{
		if(name == '')
			throw new GRuntimeError('名前の無いオブジェクトはコンテナに追加できません。');

		if(typeof(objects_[name]) !== 'undefined')
			erase(name);

		return (objects_[name] = obj);
	}

	/**/
	function erase(name)
	{
		if(name == '')
			return void;

		var obj = objects_[name];

		if(typeof(objects_[name]) !== 'undefined')
			delete objects_[name];

		return obj;
	}

	/**/
	function remove(obj)
	{
		var arr = [];

		arr.assign(objects_);

		for(var i = arr.count - 2; i >= 0; i -= 2)
		{
			// NOTE: 定数などは利用されている可能性があるため
			// NOTE: 絶対に被らないローカルオブジェクトでマークする。
			if(arr[i + 1] === obj)
				arr[i] = arr[i + 1] = arr;
		}

		arr.remove(arr);

		GObjectUtils.assignDictionary(objects_, arr);

		return arr.count >> 1;
	}

	/**/
	function get(name)
	{
		return (name == '' ? void : objects_[name]);
	}

	/*! \brief オブジェクトを検索します。
	 *
	 * \param [obj] 検索したいオブジェクトを指定します。
	 *
	 * \return 登録されている名前を返します。
	 * \return 指定されたオブジェクトが登録されていない場合は空文字列を返します。
	**/
	function find(obj)
	{
		var arr = [];

		arr.assign(objects_);

		for(var i = arr.count - 2; i >= 0; i -= 2)
		{
			if(arr[i + 1] === obj)
				return arr[i];
		}

		return '';
	}

	/*! \brief イテレーション
	 *
	 * block の仕様は以下の通りです。
	 *
	 * function block(object, name, arguments, ...)
	 *
	 * \remarks 第一引数が有効 (valid なオブジェクト) である事は保障されません。
	**/
	function each(block, arguments*)
	{
		var arr = [];

		arr.assign(objects_);

		for(var i = arr.count - 2; i >= 0; i -= 2)
			block(arr[i + 1], arr[i], arguments*);
	}

	/**/
	function store(tick)
	{
		return %[];
	}

	/**/
	function restore(dic, tick)
	{
	}

	property window
	{
		getter		{ return window_; }
	}
}


