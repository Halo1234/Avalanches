/*
**/

/*! \brief スナップショット機能。
**/
class ModSnapshot extends GModule
{
	var lockCount_ = 0;

	/**/
	function ModSnapshot(container, name)
	{
		super.GModule(...);
	}

	/**/
	function createExtensionTagHandlers()
	{
		return %[

			/* @lock_snapshot */
			'lock_snapshot' => lock,

			/* @unlock_snapshot */
			'unlock_snapshot' => unlock,

		];
	}

	/*! \brief 保存されているスナップショットを取得します。
	 *
	 * \param [layer] スナップショット画像を受け取るレイヤオブジェクトを指定します。
	**/
	function getImage(layer)
	{
		if(lockCount_ > 0)
		{
			with(container.window.temporaryLocation)
			{
				if(.typeCheck('snapshot', 'Layer'))
					.load('snapshot', layer);
			}
		}
	}

	/**/
	function lock()
	{
		if(lockCount_++ == 0)
			container.window.temporaryLocation.save('snapshot', window.primaryLayer, 'p');
	}

	/**/
	function unlock()
	{
		if(lockCount_-- <= 0)
			throw new GRuntimeError('ロックカウンタがアンダーフローしました。[in ModSnapshot#unlock()]');
		if(lockCount_ == 0)
			container.window.temporaryLocation.remove('snapshot');
	}

	/**/
	function free()
	{
		lockCount_ = 1;
		unlock();
	}

	/**/
	function restore(dic, tick)
	{
		free();

		super.restore(dic, tick);
	}
}
